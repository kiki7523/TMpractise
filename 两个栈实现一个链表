#include"linklist.h"
#include"stack.h"

void moveStack(stack* data, stack* data1);//前置声明
void pushQueue(stack* data,int queuedata)
{       
    pushStack(data, queuedata);//这里不检查是因为pushstack()已经检查栈满
}

void popQueue(stack* data, stack* data1)//出队
{
    if (stackEmpty(data1))
    {
        moveStack(data, data1);
        cout << data1->data[data1->top] << endl;
        popStack(data1);

      
    }
    else
    {
        cout << data1->data[data1->top] << endl;
        popStack(data1);
    }
}

void moveStack(stack* data,stack*data1)//当栈2为空时，从栈一到栈二
{
    if (stackEmpty(data))
    {
        cout << "can't move" << endl;
        return;
    }
    for (; data->top >= 0; data->top--)
    {
        pushStack(data1, data->data[data->top]);
    }
}

int main()
{   
    stack* p = (stack*)malloc(sizeof(stack));
    stack* q = new stack;
    initStack(p);//初始化栈
    initStack(q);
    for(int i=0;i<5;i++)
    {
        pushQueue(p, i);//入队
    }
    popQueue(p, q);//出队
    popQueue(p, q);
    popQueue(p, q);
    popQueue(p, q);
    popQueue(p, q);
    popQueue(p, q);

    free(p);
    delete q;

	return 0;
}
